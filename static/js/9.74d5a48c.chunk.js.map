{"version":3,"sources":["components/pages/SingleComicPage.js"],"names":["View","comic","title","description","thumbnail","pageCount","language","price","className","src","alt","to","SingleComicPage","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComic","clearError","useEffect","then","onComicLoaded","errorMessage","spinner","content"],"mappings":"+KA2CMA,EAAO,SAAH,GAAmB,IAAbC,EAAK,EAALA,MAELC,EAA8DD,EAA9DC,MAAOC,EAAuDF,EAAvDE,YAAaC,EAA0CH,EAA1CG,UAAWC,EAA+BJ,EAA/BI,UAAWC,EAAoBL,EAApBK,SAAUC,EAAUN,EAAVM,MAE5D,OACG,sBAAKC,UAAU,eAAc,UAC1B,qBAAKC,IAAKL,EAAWM,IAAKR,EAAOM,UAAU,sBAC3C,sBAAKA,UAAU,qBAAoB,UAChC,oBAAIA,UAAU,qBAAoB,SAAEN,IACpC,mBAAGM,UAAU,sBAAqB,SAAEL,IACpC,mBAAGK,UAAU,sBAAqB,SAAEH,IACpC,oBAAGG,UAAU,sBAAqB,UAAC,aAAWF,KAC9C,qBAAKE,UAAU,sBAAqB,SAAED,OAEzC,cAAC,IAAI,CAACI,GAAI,UAAWH,UAAU,qBAAoB,SAAC,oBAK9CI,UArDS,WAErB,IAAQC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAK,mBAAjCd,EAAK,KAAEe,EAAQ,KACtB,EAAiDC,cAAzCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAElCC,qBAAU,WAUPD,IACAD,EAASP,GACLU,KAAKC,KAVT,CAACX,IAGJ,IAAMW,EAAgB,SAACvB,GACpBe,EAASf,IASZ,IAAMwB,EAAeN,EAAQ,cAAC,IAAY,IAAM,KAC1CO,EAAUR,EAAU,cAAC,IAAO,IAAM,KAClCS,EAAYT,GAAWC,IAAUlB,EAAkC,KAAzB,cAACD,EAAI,CAACC,MAAOA,IAE7D,OACG,qCACIwB,EACAC,EACAC","file":"static/js/9.74d5a48c.chunk.js","sourcesContent":["import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './singleComic.scss';\r\n\r\nconst SingleComicPage = () => {\r\n\r\n   const { comicId } = useParams();\r\n   const [comic, setComic] = useState(null);\r\n   const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n   useEffect(() => {\r\n      updateComic();\r\n   }, [comicId]);\r\n\r\n\r\n   const onComicLoaded = (comic) => {\r\n      setComic(comic);\r\n   };\r\n\r\n   function updateComic() {\r\n      clearError();\r\n      getComic(comicId)\r\n         .then(onComicLoaded)\r\n   }\r\n\r\n   const errorMessage = error ? <ErrorMessage /> : null;\r\n   const spinner = loading ? <Spinner /> : null;\r\n   const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n   return (\r\n      <>\r\n         {errorMessage}\r\n         {spinner}\r\n         {content}\r\n      </>\r\n   )\r\n}\r\n\r\nconst View = ({ comic }) => {\r\n\r\n   const { title, description, thumbnail, pageCount, language, price } = comic;\r\n\r\n   return (\r\n      <div className=\"single-comic\">\r\n         <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n         <div className=\"single-comic__info\">\r\n            <h2 className=\"single-comic__name\">{title}</h2>\r\n            <p className=\"single-comic__descr\">{description}</p>\r\n            <p className=\"single-comic__descr\">{pageCount}</p>\r\n            <p className=\"single-comic__descr\">Language: {language}</p>\r\n            <div className=\"single-comic__price\">{price}</div>\r\n         </div>\r\n         <Link to={'/comics'} className=\"single-comic__back\">Back to all</Link>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SingleComicPage;"],"sourceRoot":""}